# https://circleci.com/docs/2.0/language-php/
# https://circleci.com/docs/2.0/circleci-images/
version: 2

defaults: &defaults
    working_directory: '~/project'
    docker:
        - image: 'halplatform/php:latest'

attach_workspace: &attach_workspace
    attach_workspace:
        at: '.'

persist_workspace: &persist_workspace
    persist_to_workspace:
        root: '.'
        paths: [ '.' ]

workflows:

    version: 2

    pipeline:
        jobs:
            - fetch_code
            - install_php_dependencies:
                requires: [ fetch_code ]

            - unit_tests:
                requires: [ install_php_dependencies ]
            - static_analysis:
                requires: [ install_php_dependencies ]
            - linting:
                requires: [ install_php_dependencies ]
            - security_tests:
                requires: [ install_php_dependencies ]

            - build_phinx:
                requires: [ unit_tests, static_analysis, linting, security_tests ]
            - test_migrations:
                requires: [ build_phinx ]

jobs:
    fetch_code:
        <<: *defaults
        steps:
            - checkout
            - *persist_workspace

    install_php_dependencies:
        <<: *defaults
        steps:
            - *attach_workspace

            - restore_cache:
                keys: [ 'v1-php-deps-{{ checksum "composer.json" }}', 'v1-php-deps' ]

            - run:
                name: 'Install PHP dependencies'
                command: |
                    composer --no-interaction --no-progress install
                    composer show

            - save_cache:
                key: 'v1-php-deps-{{ checksum "composer.json" }}'
                paths: [ 'vendor' ]

            - *persist_workspace

    unit_tests:
        <<: *defaults
        steps:
            - *attach_workspace
            - run:
                name: 'Run unit tests'
                command: |
                    phpdbg -qrr \
                    vendor/bin/phpunit
            - store_test_results:
                path: '.phpunit/report'

    static_analysis:
        <<: *defaults
        steps:
            - *attach_workspace
            - run:
                name: 'Run static analysis'
                command: 'composer run-script analyze'

    linting:
        <<: *defaults
        steps:
            - *attach_workspace

            - run:
                name: 'Run syntax check'
                command: 'composer run-script lint'

            - run:
                name: 'Run code formatting check'
                command: 'composer run-script sniff'

    security_tests:
        working_directory: '~/project'
        docker:
          - image: 'circleci/node:9-stretch'
        steps:
            - *attach_workspace

            - run:
                name: 'Install Snyk CLI'
                command: 'yarn global add snyk'

            - run:
                name: 'Run snyk'
                command: |
                    if [ "${OPEN_SOURCE}" == "1" ] ; then
                        $(yarn global bin)/snyk test
                        $(yarn global bin)/snyk monitor
                    else
                        echo "Detected private repo. Skipping step."
                    fi

    build_phinx:
        <<: *defaults
        steps:
            - *attach_workspace

            - run: 'composer self-update'
            - run:
                name: 'Build phinx phar'
                command: 'bin/hal-phinx'
            - persist_to_workspace:
                root: '.'
                paths: [ '.phinx' ]

    test_migrations:
        working_directory: '~/project'
        docker:
            - image: 'halplatform/php:latest'
            - image: 'postgres:9.6'
              environment:
                  POSTGRES_DB: hal
                  POSTGRES_USER: hal
            - image: 'mysql:5.7'
              environment:
                  MYSQL_DATABASE: hal
                  MYSQL_ALLOW_EMPTY_PASSWORD: yes
        steps:
            - *attach_workspace
            - run:
                name: 'Prepare DB config'
                command: |
                    cp ./phinx.yml.dist ./phinx.yml
                    sleep 15
            - run:
                name: 'Run migrations in Postgres 9.6'
                command: |
                    bin/hal-phinx migrate -e dev_postgres
                    bin/hal-phinx status -e dev_postgres
            - run:
                name: 'Run migrations in MySQL 5.7'
                command: |
                    bin/hal-phinx migrate -e dev_mysql
                    bin/hal-phinx status -e dev_mysql

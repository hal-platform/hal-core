#!/usr/bin/env bash

set -eo pipefail

function log {
  local readonly msg="$@"
  >&2 echo -e "$msg"
}

function ensure_is_installed {
  local readonly name="$1"

  if [[ ! $(command -v ${name}) ]]; then
    log "ERROR: The binary '$name' is required by this script but is not installed or in the system's PATH."
    exit 1
  fi
}

# download and install box
function download_box {
    local readonly tmp_dir="$1"
    local readonly box_version="$2"

    cat <<EOF
-------------------------------------------------------------------------------
Installing box ${box_version} (https://github.com/humbug/box)
-------------------------------------------------------------------------------

EOF

    if [ ! -d "${tmp_dir}" ] ; then
        mkdir -p "${tmp_dir}"
    fi

    if [ -f "${tmp_dir}/box.phar" ] ; then
        return
    fi

    curl -LSs \
        -o "${tmp_dir}/box.phar" \
        "https://github.com/humbug/box/releases/download/${box_version}/box.phar"

    chmod +x "${tmp_dir}/box.phar"

}

# download phinx
function download_phinx {
    local readonly tmp_dir="$1"
    local readonly phinx_version="$2"

    local box_config_file="${tmp_dir}/phinx-${phinx_version}/box.json"

    cat <<EOF
-------------------------------------------------------------------------------
Installing phinx ${phinx_version} (https://github.com/cakephp/phinx)
-------------------------------------------------------------------------------

EOF
    if [ -d "${tmp_dir}/phinx-${phinx_version}" ] ; then
        return
    fi

    if [ ! -d "${tmp_dir}/phinx-${phinx_version}" ] ; then
        mkdir -p "${tmp_dir}/phinx-${phinx_version}"
    fi

    curl -LSs \
        -o "${tmp_dir}/phinx.tgz" \
        "https://github.com/cakephp/phinx/archive/v${phinx_version}.tar.gz"

    tar -xzf \
        "${tmp_dir}/phinx.tgz" \
        --strip-components=1 \
        --directory="${tmp_dir}/phinx-${phinx_version}"

    curl -LSs \
        -o "${tmp_dir}/phinx-${phinx_version}/box.json" \
        "https://raw.githubusercontent.com/cakephp/phinx/v${phinx_version}/box.json"

    php -r '
    $config = json_decode(file_get_contents("'${box_config_file}'"), true);
    $config["output"] = "phinx-'${phinx_version}'.phar";
    $config["exclude-composer-files"] = false;
    $config["finder"][] = ["name" => "*", "in" => "vendor/composer"];
    file_put_contents("'${box_config_file}'", json_encode($config, \JSON_PRETTY_PRINT));
    '

    composer \
        --no-dev \
        --no-interaction \
        --no-progress \
        --working-dir="${tmp_dir}/phinx-${phinx_version}" \
        install
}

# compile phinx
function compile_phinx {
    local readonly tmp_dir="$1"
    local readonly phinx_version="$2"
    local readonly target_phinx="$3"

    local readonly cur_dir="$(pwd)"

    cat <<EOF
-------------------------------------------------------------------------------
Compiling phinx phar
-------------------------------------------------------------------------------

EOF

    cd "${tmp_dir}/phinx-${phinx_version}"

    git init && \
        git config user.email "git@example.com" && git config user.name "gituser" \
        git add box.json && git commit -m "dummy"

    php "${tmp_dir}/box.phar" compile -vv

    mv "${tmp_dir}/phinx-${phinx_version}/phinx-${phinx_version}.phar" \
       "${target_phinx}"

    rm -rf "${tmp_dir}/phinx-${phinx_version}"

    cd "${cur_dir}"
}

function ensure_phinx_installed {
    local readonly tmp_dir="$1"
    local readonly phinx_file="$2"
    local readonly box_version="$3"
    local readonly phinx_version="$4"

    if [ ! -f "${phinx_file}" ] ; then
        ensure_is_installed "curl"
        ensure_is_installed "git" # box 3.0 fails without git installed https://github.com/humbug/box/issues/66
        ensure_is_installed "php"
        ensure_is_installed "tar"

        download_box   "${tmp_dir}" "${box_version}"
        download_phinx "${tmp_dir}" "${phinx_version}"
        compile_phinx  "${tmp_dir}" "${phinx_version}" "${phinx_file}"
    fi
}

# declare variables
cur_dir="$( cd "$( dirname "$0" )" && pwd )"
box_version="${HAL_BOX_VERSION:-3.0.0-beta.4}"
phinx_version="${HAL_PHINX_VERSION:-0.10.5}"

# Detect if this is used in as a composer dependency (in vendor/bin)
root_dir="${cur_dir}/.."
if [ -f "${root_dir}/autoload.php" ] ; then
    root_dir="${cur_dir}/../.."
fi

phinx_dir="${root_dir}/.phinx"
target_phinx="${phinx_dir}/phinx-${phinx_version}.phar"

ensure_phinx_installed "${phinx_dir}" "$target_phinx" "${box_version}" "${phinx_version}"

# Include phinx secrets if present in working dir
if [ -f  "$(pwd)/phinx.secrets" ] ; then
    source "$(pwd)/phinx.secrets"
fi

"${target_phinx}" $@
